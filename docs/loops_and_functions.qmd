---
title: "loops and functions"
format: html
---

## For loops revisited - Task 1
- Create two sequences, one called weekdays that contains days of the week (“Monday”, “Tuesday”, “Wednesday”, etc.) and one called transects that contains the series of transect names “Transect A”, “Transect B,”Transect C”. Write a nested for loop that creates a matrix containing the following:

```{r}
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
transects <- c("Transect A", "Transect B", "Transect C")

for (i in seq_along(weekdays)){
  for (j in seq_along(transects)){
    print(paste0(weekdays[i], "-", transects[j]))
  }
}
```

## Functions Introduced
# Task 2
- Write a function called force that calculates a force (in Newtons), given inputs of mass (in kg) and acceleration (in 
 
 (recall: 
), and returns a statement “The resulting force is ___ Newtons.”

```{r}
# Creating force function
Newton <- function(mass, acceleration){ # use 'Newton' as function variable 
    force<- mass * acceleration #force is the equation
    print(paste("The resulting",force, "Newtons"))
}
```


```{r}
Newton(mass=20, acceleration=50)
```
## Task 3
- The length:weight relationship for fish is: W=aL^b where where L is total fish length (centimeters), W is the expected fish weight (grams), and a and b are species-dependent parameter values (shown below for several fish from Peyton et al. 2016).
- Recreate the table above as a data frame stored as fish_parms. Then, write a function called fish_weight that allows a user to only enter the common name (argument fish_name) and total length (argument tot_length) (in centimeters) of a fish, to return the expected fish weight in grams. Test it out for different species and lengths.

Now, try creating a vector of lengths (e.g. 0 to 100, by increments of 1) and ensuring that your function will calculate the fish weight over a range of lengths for the given species (try this for milkfish, storing the output weights as milkfish_weights.
```{r}
fish_name <- c("Milkfish", "Great barracuda", "Giant trevally")

a_est <- c(0.0905, 0.00181, 0.0353)

b_est <- c(2.52, 3.27, 3.05)
fish_parms <- data.frame(fish_name, a_est, b_est)

fish_length <- seq(from= 0, to= 100, by= 1)
```

# creating fish_weight function
```{r}
fish_weight<- function(a, l, b){
  weight<- a * l * exp(b)
  for (i in seq_along(a_est[i])){
    for (j in seq_along(b_est[j])){
  }
  }
}
```

# creating loop for fish parms
```{r}

```


## Task 4
Wave power (more accurately wave energy flux) in deep water is approximated by:

P deep = 0.5H^2T

Write a function called wave_power that calculates potential ocean wave power given inputs of wave height and period.

Use your wave_power function to approximate wave power for a period of 8 seconds, over a range of wave heights from 0 to 3 meters by increments of 0.2 meters.
```{r}
wave_power <- function(H, T){
  eq <- 0.5 * H * exp(2) * T
}
```


```{r}
wave_height <- seq(from = 0, to = 3, by= 8)
```


